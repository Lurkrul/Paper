From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lurkrul <44719592+Lurkrul@users.noreply.github.com>
Date: Wed, 19 Jun 2024 17:57:27 +0800
Subject: [PATCH] Add event so you can modify what players will hear the event


diff --git a/src/main/java/io/papermc/paper/event/entity/DragonPrepareDeathSoundTargetsEvent.java b/src/main/java/io/papermc/paper/event/entity/DragonPrepareDeathSoundTargetsEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..c9f821dd291c486c56597cc32135f481592daeff
--- /dev/null
+++ b/src/main/java/io/papermc/paper/event/entity/DragonPrepareDeathSoundTargetsEvent.java
@@ -0,0 +1,99 @@
+package io.papermc.paper.event.entity;
+
+import org.bukkit.entity.Player;
+import org.bukkit.entity.EnderDragon;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.jetbrains.annotations.NotNull;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Is called when an {@link EnderDragon} dies to determine what {@link Player}s hear it.
+ */
+public class DragonPrepareDeathSoundTargetsEvent extends EntityEvent {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+    private Set<Player> playerList;
+
+    public DragonPrepareDeathSoundTargetsEvent(final @NotNull EnderDragon enderDragon, Collection<? extends Player> players) {
+        super(enderDragon);
+        playerList = new HashSet<>(players);
+    }
+
+    /**
+     * Gets the list of {@link Player}s that are going to hear the sound.
+     *
+     * @return Collection of Players
+     */
+    public Set<Player> getPlayerList() {
+        return playerList;
+    }
+
+    /**
+     * Sets the player list to a Collection of defined {@link Player}s
+     *
+     * @param newPlayerList The new collection of players to hear the sound.
+     */
+    public void setPlayerList(Set<Player> newPlayerList) {
+        playerList = newPlayerList;
+    }
+
+    /**
+     * Add another {@link Player} to the list of that will hear the death sound if not already present.
+     *
+     * @param player The player to be added
+     */
+    public void addPlayer(Player player) {
+        playerList.add(player);
+    }
+
+    /**
+     * Will remove a {@link Player} from the list that will hear the death sound if present.
+     *
+     * @param player The player to be removed
+     */
+    public void removePlayer(Player player) {
+        playerList.remove(player);
+    }
+
+    /**
+     * Will add a collection of {@link Player}s to the list that will hear the death sound if not already present.
+     *
+     * @param playersToAdd Collection of players to be added
+     */
+    public void addPlayers(Set<Player> playersToAdd) {
+        playerList.addAll(playersToAdd);
+    }
+
+    /**
+     * Will remove a collection of {@link Player}s from the list that will hear the death sound if present.
+     *
+     * @param playersToRemove Collection of players to be removed.
+     */
+    public void removePlayers(Set<Player> playersToRemove) {
+        playerList.removeAll(playersToRemove);
+    }
+
+    /**
+     * The {@link EnderDragon} that fired this event when it died.
+     *
+     * @return the dragon
+     */
+    public EnderDragon getDragon() {
+        return (EnderDragon) super.getEntity();
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+
+}
